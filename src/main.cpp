#include <Arduino.h>
#include <notes.h>

#define buttSensorPin A0
#define ledPin 13
#define soundPin 9

#define tick 1000
#define maxButtTime 1200

int buttValue;
int buttTime = 0;

// A comment change to learn GitHub

// change this to make the song slower or faster
int tempo = 225;

// change this to whichever pin you want to use
int buzzer = soundPin;

const int melody[] PROGMEM = {

    // At Doom's Gate (E1M1)
    // Score available at https://musescore.com/pieridot/doom

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 1
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 5
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 9
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 13
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_FS3,
    -16,
    NOTE_D3,
    -16,
    NOTE_B2,
    -16,
    NOTE_A3,
    -16,
    NOTE_FS3,
    -16,
    NOTE_B2,
    -16,
    NOTE_D3,
    -16,
    NOTE_FS3,
    -16,
    NOTE_A3,
    -16,
    NOTE_FS3,
    -16,
    NOTE_D3,
    -16,
    NOTE_B2,
    -16,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 17
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 21
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B3,
    -16,
    NOTE_G3,
    -16,
    NOTE_E3,
    -16,
    NOTE_G3,
    -16,
    NOTE_B3,
    -16,
    NOTE_E4,
    -16,
    NOTE_G3,
    -16,
    NOTE_B3,
    -16,
    NOTE_E4,
    -16,
    NOTE_B3,
    -16,
    NOTE_G4,
    -16,
    NOTE_B4,
    -16,

    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_A3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_G3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,  // 25
    NOTE_F3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_DS3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_E3,
    8,
    NOTE_F3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_A3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_G3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_F3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_DS3,
    -2,

    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_A3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_G3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,  // 29
    NOTE_F3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_DS3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_E3,
    8,
    NOTE_F3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_A3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_G3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_A3,
    -16,
    NOTE_F3,
    -16,
    NOTE_D3,
    -16,
    NOTE_A3,
    -16,
    NOTE_F3,
    -16,
    NOTE_D3,
    -16,
    NOTE_C4,
    -16,
    NOTE_A3,
    -16,
    NOTE_F3,
    -16,
    NOTE_A3,
    -16,
    NOTE_F3,
    -16,
    NOTE_D3,
    -16,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 33
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 37
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_CS3,
    8,
    NOTE_CS3,
    8,
    NOTE_CS4,
    8,
    NOTE_CS3,
    8,
    NOTE_CS3,
    8,
    NOTE_B3,
    8,
    NOTE_CS3,
    8,
    NOTE_CS3,
    8,  // 41
    NOTE_A3,
    8,
    NOTE_CS3,
    8,
    NOTE_CS3,
    8,
    NOTE_G3,
    8,
    NOTE_CS3,
    8,
    NOTE_CS3,
    8,
    NOTE_GS3,
    8,
    NOTE_A3,
    8,
    NOTE_B2,
    8,
    NOTE_B2,
    8,
    NOTE_B3,
    8,
    NOTE_B2,
    8,
    NOTE_B2,
    8,
    NOTE_A3,
    8,
    NOTE_B2,
    8,
    NOTE_B2,
    8,
    NOTE_G3,
    8,
    NOTE_B2,
    8,
    NOTE_B2,
    8,
    NOTE_F3,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 45
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B3,
    -16,
    NOTE_G3,
    -16,
    NOTE_E3,
    -16,
    NOTE_G3,
    -16,
    NOTE_B3,
    -16,
    NOTE_E4,
    -16,
    NOTE_G3,
    -16,
    NOTE_B3,
    -16,
    NOTE_E4,
    -16,
    NOTE_B3,
    -16,
    NOTE_G4,
    -16,
    NOTE_B4,
    -16,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 49
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 53
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_FS3,
    -16,
    NOTE_DS3,
    -16,
    NOTE_B2,
    -16,
    NOTE_FS3,
    -16,
    NOTE_DS3,
    -16,
    NOTE_B2,
    -16,
    NOTE_G3,
    -16,
    NOTE_D3,
    -16,
    NOTE_B2,
    -16,
    NOTE_DS4,
    -16,
    NOTE_DS3,
    -16,
    NOTE_B2,
    -16,

    // -/-

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 57
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 61
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E4,
    -16,
    NOTE_B3,
    -16,
    NOTE_G3,
    -16,
    NOTE_G4,
    -16,
    NOTE_E4,
    -16,
    NOTE_G3,
    -16,
    NOTE_B3,
    -16,
    NOTE_D4,
    -16,
    NOTE_E4,
    -16,
    NOTE_G4,
    -16,
    NOTE_E4,
    -16,
    NOTE_G3,
    -16,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 65
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_A3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_G3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,  // 69
    NOTE_F3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_DS3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_E3,
    8,
    NOTE_F3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_A3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_G3,
    8,
    NOTE_A2,
    8,
    NOTE_A2,
    8,
    NOTE_A3,
    -16,
    NOTE_F3,
    -16,
    NOTE_D3,
    -16,
    NOTE_A3,
    -16,
    NOTE_F3,
    -16,
    NOTE_D3,
    -16,
    NOTE_C4,
    -16,
    NOTE_A3,
    -16,
    NOTE_F3,
    -16,
    NOTE_A3,
    -16,
    NOTE_F3,
    -16,
    NOTE_D3,
    -16,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 73
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 77
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 81
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    -2,

    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,  // 73
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_AS2,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B2,
    8,
    NOTE_C3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_E3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_D3,
    8,
    NOTE_E2,
    8,
    NOTE_E2,
    8,
    NOTE_B3,
    -16,
    NOTE_G3,
    -16,
    NOTE_E3,
    -16,
    NOTE_B2,
    -16,
    NOTE_E3,
    -16,
    NOTE_G3,
    -16,
    NOTE_C4,
    -16,
    NOTE_B3,
    -16,
    NOTE_G3,
    -16,
    NOTE_B3,
    -16,
    NOTE_G3,
    -16,
    NOTE_E3,
    -16,
};

// sizeof gives the number of bytes, each int value is composed of two bytes (16
// bits) there are two values per note (pitch and duration), so for each note
// there are four bytes
int notes = sizeof(melody) / sizeof(melody[0]) / 2;

// this calculates the duration of a whole note in ms
int wholenote = (60000 * 4) / tempo;

int divider = 0, noteDuration = 0;

void setup() { Serial.begin(9600); }
void doom() {
  Serial.println(F("DOOM"));
  Serial.println();
  for (int thisNote = 0; thisNote < notes * 2; thisNote = thisNote + 2) {
    // Check that the butt sensor is still detecting a butt, and iff so, stop
    // dooming
    buttValue = analogRead(buttSensorPin);
    if (buttValue <= 800) {
      buttTime = 0;
      digitalWrite(ledPin, LOW);
      return;
    }

    // calculates the duration of each note
    divider = pgm_read_word_near(melody + thisNote + 1);
    if (divider > 0) {
      // regular note, just proceed
      noteDuration = (wholenote) / divider;
    } else if (divider < 0) {
      // dotted notes are represented with negative durations!!
      noteDuration = (wholenote) / abs(divider);
      noteDuration *= 1.5;  // increases the duration in half for dotted notes
    }

    // we only play the note for 90% of the duration, leaving 10% as a pause
    tone(buzzer, pgm_read_word_near(melody + thisNote), noteDuration * 0.9);

    // Wait for the specief duration before playing the next note.
    delay(noteDuration);

    // stop the waveform generation before the next note.
    noTone(buzzer);
  }
}

void loop() {
  buttValue = analogRead(buttSensorPin);
  Serial.print(F("buttValue: "));
  Serial.print(buttValue);
  Serial.println(F(" butts"));
  Serial.print(F("buttTime: "));
  Serial.print(buttTime);
  Serial.println(F(" seconds"));
  Serial.println();
  delay(tick);

  if (buttValue >= 800) {
    // digitalWrite(ledPin, HIGH);
    buttTime++;
    delay(tick);
    if (buttTime >= maxButtTime) {
      doom();
    }
  }
  if (buttValue <= 800) {
    buttTime = 0;
    digitalWrite(ledPin, LOW);
    delay(tick);
  }
}